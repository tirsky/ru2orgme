# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Copy file via scp
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
        with:
          source: "."
          target: "/opt/app"
      - name: Publish back (django) to Github Packages Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: tirsky/ru2orgme/ru2orgme
          registry: docker.pkg.github.com
          username: ${{ secrets.G_USERNAME }}
          password: ${{ secrets.G_TOKEN }}
          path: app
          dockerfile: Dockerfile.prod
          tags: latest
      - name: Publish front (vuejs) to Github Packages Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: tirsky/ru2orgme/ruorg-front
          registry: docker.pkg.github.com
          username: ${{ secrets.G_USERNAME }}
          password: ${{ secrets.G_TOKEN }}
          path: ruorg-front
          dockerfile: Dockerfile-prod
          tags: latest
      - name: Deploy package to digitalocean
        uses: appleboy/ssh-action@master
        env:
          G_USERNAME: ${{ secrets.G_USERNAME }}
          G_TOKEN: ${{ secrets.G_TOKEN }}
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
          envs: G_USERNAME, G_TOKEN
          script: |
            docker stop $(docker ps -a -q)
            docker login docker.pkg.github.com -u $G_USERNAME -p $G_TOKEN
            docker pull docker.pkg.github.com/tirsky/ru2orgme/ru2orgme:latest
            docker pull docker.pkg.github.com/tirsky/ru2orgme/ruorg-front:latest
            cd /opt/app && docker-compose down -v --remove-orphans
            cd /opt/app/ruorg-front && docker-compose down -v --remove-orphans
            cd /opt/app
            docker-compose -f /opt/app/ruorg-front/docker-compose-prod.yml up -d
            docker-compose -f /opt/app/docker-compose.prod.yml up -d
            docker-compose -f /opt/app/docker-compose.prod.yml exec web python manage.py migrate --noinput
            docker-compose -f /opt/app/docker-compose.prod.yml exec web python manage.py collectstatic --no-input --clear
            docker ps